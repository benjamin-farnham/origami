{"version":3,"sources":["_check-js.js","data-toggle.js","date-picker.js","forms.js","parallax.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfndlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"origami.js","sourcesContent":[";(function() {\n    var html = document.querySelector('html');\n    html.removeAttribute(\"class\");\n})();\n",";(function() {\n    document.addEventListener('click', function(e) {\n    if (e.target.dataset.toggle === 'true'){\n        e.preventDefault();\n        e.stopPropagation();\n    \tvar el = e.target.dataset.toggleClass;\n        var elClass = document.querySelectorAll(\"[data-toggle-class]\");\n        for(var i = 0; i < elClass.length; i++) {\n            if(elClass[i].dataset.toggleClass == el){\n            \telClass[i].classList.toggle(el);\n            }\n       \t}\n    }\n});\n})();\n","// Date picker\n// ============================================================ //\n;(function(window, document, undefined){\n    var datepicker = {\n        get: function() {\n            return _self;\n        },\n        init: function(options) {\n            return _self || new Datepicker(options);\n        }\n    }\n\n    function Datepicker(options) {\n        options = options || {\n            limitYearsBack: 100,\n            limitYearsForward: 100,\n            closeOnSelect: false,\n            disableDaysOfWeek: []\n        };\n\n        // Check for datepicker elements\n        this.datepickerElements = document.querySelectorAll('.datepicker');\n\n        // Generate calendar HTML if .datepicker elements are on page.\n        if(this.datepickerElements.length > 0) {\n            this.createDatepicker(options, function() {\n\n                // Ensures form has been created and allows the creation of event listeners\n\n                // Variables\n                var selectedInput;\n                var selectedCalBox;\n                var selectedDate;\n                var initialDate = new Date();\n                var currentMonth = initialDate.getMonth();\n                var currentYear = initialDate.getFullYear();\n                var monthNames = [\n                    'January',\n                    'February',\n                    'March',\n                    'April',\n                    'May',\n                    'June',\n                    'July',\n                    'August',\n                    'September',\n                    'October',\n                    'November',\n                    'December'\n                ];\n                var dayNames = [\n                    'Sun',\n                    'Mon',\n                    'Tue',\n                    'Wed',\n                    'Thu',\n                    'Fri',\n                    'Sat'\n                ];\n                var dateInputs = document.querySelectorAll('.datepicker');\n                var calBg = document.querySelector('#calendar-bg');\n                var cal = document.querySelector('#calendar');\n                var monthSelect = document.querySelector('#calendar-month');\n                var yearSelect = document.querySelector('#calendar-year');\n                var monthSelectList = document.querySelector('#calendar-select-months');\n                var yearSelectList = document.querySelector('#calendar-select-years');\n                var monthSelectListAnchors = document.querySelectorAll('#calendar-select-months a');\n                var yearSelectListAnchors = document.querySelectorAll('#calendar-select-years a');\n                var currentSelectedDate = document.querySelector('#current-selected-day');\n                var currentSelectedYear = document.querySelector('#current-selected-year');\n                var prev = document.querySelector('#previous-month');\n                var next = document.querySelector('#next-month');\n                var calBox = document.querySelectorAll('.calendar-box');\n                var calCancel = document.querySelector('#calendar-cancel');\n                var calOk = document.querySelector('#calendar-ok');\n                var calClear = document.querySelector('#calendar-clear');\n\n                // Event Listeners\n\n                // On .datepickers being focused\n                for (var i = 0; i < dateInputs.length; i++) {\n\n                    // Append event listeners\n                    dateInputs[i].addEventListener('focus', function(e){\n                        if (this.value !== '' && new Date(this.value).toString() !== 'Invalid Date'){\n                            initialDate = new Date(this.value);\n                            currentMonth = initialDate.getMonth();\n                            currentYear = initialDate.getFullYear();\n                            selectedDate = new Date(this.value);\n                        } else {\n                            initialDate = new Date();\n                            currentMonth = initialDate.getMonth();\n                            currentYear = initialDate.getFullYear();\n                            selectedDate = '';\n                        }\n\n                        // Set elements on select active\n                        calBg.classList.add('date-select-active');\n                        cal.classList.add('date-select-active');\n                        this.classList.add('date-select-active');\n\n                        // Set header / calendar dates\n                        setHeaderDates(initialDate);\n                        calendarLayout(initialDate, options.disableDaysOfWeek);\n\n                        // Store 'this'\n                        selectedInput = this;\n                    }, false);\n\n                }\n\n                // Check date when button pushed\n                for (var box = 0; box < calBox.length; box ++) {\n                    calBox[box].addEventListener('click', function(e){\n                        e.preventDefault();\n                        if (!this.dataset.selectMonth) return;\n                        if (document.querySelector('#selected-date'))document.querySelector('#selected-date').removeAttribute('id');\n\n                        // Check if Day is one of the disabled days of the week\n                        if (this.dataset.available == 'false') return;\n\n                        // Set new header\n                        setHeaderDates(new Date(this.dataset.selectYear, this.dataset.selectMonth, this.dataset.selectDay));\n\n                        // Set input value\n                        selectedInput.value = monthNames[this.dataset.selectMonth] + ' ' + this.dataset.selectDay + ', ' + this.dataset.selectYear;\n\n                        // Ensure that label doesn't clash with content\n                        selectedInput.nextElementSibling.classList.add('active');\n\n                        // Set selected ID\n                        this.id = 'selected-date';\n\n                        // Store 'this'\n                        selectedCalBox = this;\n                        selectedDate = new Date(this.dataset.selectYear, this.dataset.selectMonth, this.dataset.selectDay);\n\n                        // Check options for closeOnSelect\n                        if (options.closeOnSelect === true) {\n                            var activeDatepicker = document.querySelectorAll('.date-select-active');\n                            for (var i = 0; i < activeDatepicker.length; i++) {\n                                activeDatepicker[i].classList.remove('date-select-active');\n                            }\n                        }\n                    }, false);\n                }\n\n                //Check for previous and next month spans being clicked\n                prev.addEventListener('click', function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    currentMonth --;\n                    var prevMonth = new Date(currentYear, currentMonth);\n\n                    if(prevMonth.getMonth() < 0) {\n                        currentMonth = 11;\n                        prevMonth = new Date(currentYear - 1, currentMonth);\n                    }\n                    if(document.querySelector('#selected-date'))document.querySelector('#selected-date').removeAttribute('id');\n                    calendarLayout(prevMonth, options.disableDaysOfWeek);\n                }, false);\n\n                next.addEventListener('click', function(e) {\n                    e.preventDefault();\n                    currentMonth ++;\n                    var nextMonth = new Date(initialDate.getFullYear(), currentMonth);\n\n                    if(nextMonth.getMonth() < 0) {\n                        nextMonth = new Date(initialDate.getFullYear() + 1, currentMonth - 1);\n                    }\n                    if(document.querySelector('#selected-date'))document.querySelector('#selected-date').removeAttribute('id');\n                    calendarLayout(nextMonth, options.disableDaysOfWeek);\n                }, false);\n\n                // Set new month from selection\n                for (var m = 0; m < monthSelectListAnchors.length; m ++) {\n                    monthSelectListAnchors[m].addEventListener('click', function(e) {\n                        e.preventDefault();\n                        currentMonth = monthNames.indexOf(this.innerText);\n                        var newSelectedMonthDate = new Date(currentYear, currentMonth, 1);\n\n                        if(document.querySelector('#selected-date'))document.querySelector('#selected-date').removeAttribute('id');\n                        calendarLayout(newSelectedMonthDate, options.disableDaysOfWeek);\n                        monthSelectList.classList.toggle('select-month');\n                    }, false);\n                }\n\n                for (var y = 0; y < yearSelectListAnchors.length; y ++) {\n                    yearSelectListAnchors[y].addEventListener('click', function(e) {\n                        e.preventDefault();\n                        currentYear = parseInt(this.innerText, 0);\n                        var newSelectedYearDate = new Date(currentYear, currentMonth, 1);\n\n                        if(document.querySelector('#selected-date'))document.querySelector('#selected-date').removeAttribute('id');\n                        calendarLayout(newSelectedYearDate, options.disableDaysOfWeek);\n                        yearSelectList.classList.toggle('select-year');\n                    }, false);\n                }\n\n                // Close date modal\n                calBg.addEventListener('click', function(e){\n                    var activeDatepicker = document.querySelectorAll('.date-select-active');\n                    for (var i = 0; i < activeDatepicker.length; i++) {\n                        activeDatepicker[i].classList.remove('date-select-active');\n                    }\n                }, false);\n                calCancel.addEventListener('click', function(e){\n                    e.preventDefault();\n                    var activeDatepicker = document.querySelectorAll('.date-select-active');\n                    for (var i = 0; i < activeDatepicker.length; i++) {\n                        activeDatepicker[i].classList.remove('date-select-active');\n                    }\n                }, false);\n                calOk.addEventListener('click', function(e){\n                    e.preventDefault();\n                    var activeDatepicker = document.querySelectorAll('.date-select-active');\n                    for (var i = 0; i < activeDatepicker.length; i++) {\n                        activeDatepicker[i].classList.remove('date-select-active');\n                    }\n                }, false);\n\n                // Clear entire selection\n                calClear.addEventListener('click', function(e){\n                    e.preventDefault();\n\n                    // Reset Date\n                    initialDate = new Date();\n                    selectedDate = '';\n\n                    // Reset input value to empty\n                    selectedInput.value = '';\n                    selectedInput.nextElementSibling.classList.remove('active');\n\n                    // Remove selected date\n                    if(document.querySelector('#selected-date'))document.querySelector('#selected-date').removeAttribute('id');\n\n                    // Reset calendar\n                    calendarLayout(initialDate, options.disableDaysOfWeek);\n                    setHeaderDates(initialDate);\n                }, false);\n\n                // Month / Year selections\n                monthSelect.addEventListener('click', function() {\n                    if(document.querySelector('.select-year')) {\n                        document.querySelector('.select-year').classList.remove('select-year');\n                    }\n                    monthSelectList.classList.toggle('select-month');\n                }, false);\n                yearSelect.addEventListener('click', function() {\n                    if(document.querySelector('.select-month')) {\n                        document.querySelector('.select-month').classList.remove('select-month');\n                    }\n                    yearSelectList.classList.toggle('select-year');\n                }, false);\n\n                // Functions\n\n                // Set Calendar Header\n                function setHeaderDates(dateObject) {\n                    currentSelectedDate.innerText = dayNames[dateObject.getDay()] + ' - ' + monthNames[dateObject.getMonth()] + ' ' + dateObject.getDate();\n                    currentSelectedYear.innerText = dateObject.getFullYear();\n                }\n\n                //Create Calendar Elements\n                function calendarLayout(dateObject, unavailableArray) {\n                    var el = document.querySelectorAll('#calendar-dates a');\n                    var startingDayName = new Date(dateObject.getFullYear(), dateObject.getMonth(), 1).getDay();\n                    var lastDay = new Date(dateObject.getFullYear(), dateObject.getMonth() + 1, 0).getDate();\n                    var dayName = startingDayName;\n                    var unavailableDays = [];\n\n                    // Unavailable days\n                    if (unavailableArray.length > 0) {\n                        for (var y = 0; y < unavailableArray.length; y++) {\n                            unavailableDays.push(dayNames.indexOf(unavailableArray[y]));\n                        }\n                    }\n\n                    for (var div = 0; div < el.length; div++) {\n                        el[div].innerText = '';\n                        el[div].removeAttribute('data-select-year');\n                        el[div].removeAttribute('data-select-month');\n                        el[div].removeAttribute('data-select-day');\n                        el[div].removeAttribute('data-select-day-of-week');\n                        el[div].removeAttribute('data-available');\n                        el[div].style.cursor = 'text';\n                    }\n                    for (var i = 1; i <= lastDay; i++) {\n                        el[startingDayName].innerText = i;\n                        el[startingDayName].dataset.selectYear = dateObject.getFullYear();\n                        el[startingDayName].dataset.selectMonth = dateObject.getMonth();\n                        el[startingDayName].dataset.selectDay = i;\n                        el[startingDayName].dataset.selectDayOfWeek = dayName;\n\n                        // Check if dayName matches the disabled days of the Weekdays\n                        if (unavailableDays.length > 0) {\n                            for (var z = 0; z < unavailableDays.length; z++) {\n                                if (dayName === unavailableDays[z]) {\n                                    el[startingDayName].dataset.available = false;\n                                }\n                            }\n                        }\n\n                        el[startingDayName].style.cursor = 'pointer';\n                        if (selectedDate && selectedDate.getFullYear() === dateObject.getFullYear() && selectedDate.getMonth() === dateObject.getMonth() && selectedDate.getDate() === i) {\n                            el[startingDayName].id = 'selected-date';\n                        } else {\n                            el[startingDayName].removeAttribute('id');\n                        }\n                        startingDayName = startingDayName + 1;\n                        dayName == 6 ? dayName = 0 : dayName = dayName + 1;\n\n                    }\n                    monthSelect.innerText = monthNames[dateObject.getMonth()];\n                    yearSelect.innerText = dateObject.getFullYear();\n                }\n\n            });\n        }\n\n    }\n\n    // Create the calendar picker\n    Datepicker.prototype.createDatepicker = function(options, callback) {\n        options = options;\n        var createWeekDays = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\n        var createMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        var createYears = [];\n        var createCalBg = document.createElement('div');\n        var createCal = document.createElement('div');\n\n        // Set array of ID's\n        var createCalSecondLevelArray = ['calendar-header', 'calendar-selection', 'calendar-wrap'];\n        var createCalThirdLevelArray = ['calendar-select-months', 'calendar-select-years', 'calendar-days', 'calendar-dates', 'calendar-footer'];\n        var createCalHeaderSelectedArray = ['current-selected-day', 'current-selected-year'];\n        var createCalSelectorArray = ['previous-month', 'calendar-listed-date', 'next-month'];\n        var createFooterArray = ['calendar-cancel', 'calendar-clear', 'calendar-ok'];\n\n        // Create fragments\n        var createCalSecondLevel = document.createDocumentFragment();\n        var createCalThirdLevel = document.createDocumentFragment();\n        var createCalHeaderSelected = document.createDocumentFragment();\n        var createCalSelector = document.createDocumentFragment();\n        var createWeekDayFragment = document.createDocumentFragment();\n        var createMonthFragment = document.createDocumentFragment();\n        var createYearFragment = document.createDocumentFragment();\n        var createDateFragment = document.createDocumentFragment();\n        var createFooterFragment = document.createDocumentFragment();\n\n        // Add classes / ID's\n        createCalBg.id = 'calendar-bg';\n        createCalBg.classList.add('flex-l', 'align-center-s', 'jesticy-center-s');\n        createCal.id = 'calendar';\n        createCal.classList.add('depth-5', 'ml-auto', 'mr-auto');\n\n        // Create sub element layers\n        createCalSecondLevelArray.forEach(function(createCalSecondLevelArray) {\n            var calendarDivs = document.createElement('div');\n            calendarDivs.id = createCalSecondLevelArray;\n            calendarDivs.classList.add('float-fix');\n            createCalSecondLevel.appendChild(calendarDivs);\n        });\n\n        createCalThirdLevelArray.forEach(function(createCalThirdLevelArray) {\n            var calendarDivs = document.createElement('div');\n            calendarDivs.id = createCalThirdLevelArray;\n            calendarDivs.classList.add('float-fix');\n            createCalThirdLevel.appendChild(calendarDivs);\n        });\n\n        // Create spans for header\n        createCalHeaderSelectedArray.forEach(function(createCalHeaderSelectedArray) {\n            var calendarSpans = document.createElement('span');\n            calendarSpans.id = createCalHeaderSelectedArray;\n            createCalHeaderSelected.appendChild(calendarSpans);\n        });\n\n        // Create selector buttons\n        createCalSelectorArray.forEach(function(createCalSelectorArray) {\n            var calendarDivs = document.createElement('div');\n            calendarDivs.id = createCalSelectorArray;\n            createCalSelector.appendChild(calendarDivs);\n        });\n\n        // Weekdays\n        createWeekDays.forEach(function(createWeekDays) {\n            var calendarDivs = document.createElement('div');\n            calendarDivs.innerText = createWeekDays;\n            calendarDivs.classList.add('calendar-box');\n            createWeekDayFragment.appendChild(calendarDivs);\n        });\n\n        // Months\n        createMonths.forEach(function(createMonths) {\n            var calendarAnchors = document.createElement('a');\n            calendarAnchors.innerText = createMonths;\n            calendarAnchors.href = '#';\n            createMonthFragment.appendChild(calendarAnchors);\n        });\n\n        // Years\n        for (var y = new Date().getFullYear() - options.limitYearsBack; y <= new Date().getFullYear() + (options.limitYearsForward); y = y + 1) {\n            var calendarAnchors = document.createElement('a');\n            calendarAnchors.innerText = y;\n            calendarAnchors.href = '#';\n            createYearFragment.appendChild(calendarAnchors);\n        }\n\n        // Create Calendar Date Boxes\n        for (var i = 0; i < 42; i++) {\n            var calendarAnchors = document.createElement('a');\n            calendarAnchors.innerText = '';\n            calendarAnchors.classList.add('calendar-box');\n            calendarAnchors.href = '#';\n            createDateFragment.appendChild(calendarAnchors);\n        }\n\n        // Footer buttons\n        createFooterArray.forEach(function(createFooterArray) {\n            var calendarAnchors = document.createElement('a');\n            var textString = createFooterArray.split('-');\n            calendarAnchors.href = '#';\n            calendarAnchors.id = createFooterArray;\n            calendarAnchors.innerText = textString[1].toUpperCase();\n            createFooterFragment.appendChild(calendarAnchors);\n        });\n\n        // Append Elements\n        document.body.appendChild(createCalBg);\n        document.body.appendChild(createCal);\n        createCal.appendChild(createCalSecondLevel);\n        document.getElementById('calendar-wrap').appendChild(createCalThirdLevel);\n        document.getElementById('calendar-header').appendChild(createCalHeaderSelected);\n        document.getElementById('calendar-select-months').appendChild(createMonthFragment);\n        document.getElementById('calendar-selection').appendChild(createCalSelector);\n        document.getElementById('calendar-listed-date').innerHTML = '<span id=\"calendar-month\"></span> - <span id=\"calendar-year\"></span>';\n        document.getElementById('calendar-select-years').appendChild(createYearFragment);\n        document.getElementById('calendar-days').appendChild(createWeekDayFragment);\n        document.getElementById('calendar-dates').appendChild(createDateFragment);\n        document.getElementById('calendar-footer').appendChild(createFooterFragment);\n\n        return callback();\n\n    }\n\n    var _self;\n\n    if (typeof define === 'function' && define.amd) {\n        define([], function() {\n            return datepicker;\n        });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = datepicker;\n    } else {\n        window.datepicker = datepicker;\n    }\n\n})(window, document);\n\n// More options in the works\n\n// var initDatepicker = datepicker.init({\n//     limitYearsBack: 100,\n//     limitYearsForward: 100,\n//     closeOnSelect: false,\n//     disableDaysOfWeek: ['Mon']\n// });\n","// Form element constructor\n// ============================================================ //\n;(function(window, document, undefined){\n    var formElements = {\n        get: function() {\n            return _self;\n        },\n        init: function(options) {\n            return _self || new FormElements(options);\n        }\n    }\n\n    function FormElements(options) {\n        options = options || {};\n\n        // Selectors\n        this.labeledElements = document.querySelectorAll('input[type=text], input[type=email], input[type=password], input[type=url], input[type=number], input[type=date], input[type=datetime], input[type=datetime-local], input[type=number], input[type=time], input[type=tel], textarea, select');\n        this.selectElements = document.querySelectorAll('select');\n        this.selectLabels = document.querySelectorAll('select-label');\n        this.textArea = document.querySelectorAll('textarea');\n        this.selectInput = document.querySelectorAll('select');\n        this.fileInput = document.querySelectorAll('input[type=file]');\n\n        // Append event listeners\n            // Check elements associated with labels\n        this.cycleAppend(this.labeledElements, this.checkSiblingValue, 'keyup');\n        this.cycleAppend(this.labeledElements, this.checkSiblingValue, 'input');\n        this.cycleAppend(this.labeledElements, this.checkSiblingValue, 'change');\n            // Select element labels - add class 'select-label'\n        this.selectLabelClass(this.selectElements, options);\n            // Textarea resizing\n        this.cycleAppend(this.textArea, this.resize, 'change');\n        this.cycleAppend(this.textArea, this.resize, 'cut');\n        this.cycleAppend(this.textArea, this.resize, 'paste');\n        this.cycleAppend(this.textArea, this.resize, 'drop');\n        this.cycleAppend(this.textArea, this.resize, 'keyup');\n            // Check file input value\n        this.fileValues(this.fileInput);\n\n        // Check elements on load\n        this.checkFormElements(this.labeledElements);\n    }\n\n    // Utilities / Construction functions\n    // ============================================================ //\n    FormElements.prototype.cycleAppend = function(collection, handler, event) {\n        for (var item = 0; item < collection.length; item ++) {\n            collection[item].addEventListener(event, handler.bind(this, collection[item]));\n        }\n    }\n\n    // Checking form labels sibling status to append 'active'\n    // ============================================================ //\n    FormElements.prototype.checkSiblingValue = function(element) {\n        var elementForVal = element.id;\n        var labelQuery = document.querySelector('label[for=' + elementForVal + ']');\n        if((element.nodeName === 'SELECT' && element.firstElementChild.innerText !== '') || element.value !== '') {\n            labelQuery.classList.add('active');\n        } else {\n            labelQuery.classList.remove('active');\n        }\n    }\n\n    // Auto-resize textarea elements based upon amount written content\n    // ============================================================ //\n    FormElements.prototype.resize = function(element, elementEvent) {\n        window.setTimeout(function() {\n            element.style.overflow = 'hidden';\n            element.style.minHeight = '112px';\n            element.style.height = 'auto';\n            element.style.height = element.scrollHeight + 'px';\n        }, 0);\n    }\n\n    // Make select labels function\n    // ============================================================ //\n    FormElements.prototype.selectLabelClass = function(selectList, options) {\n        for (var select = 0; select < selectList.length; select++) {\n            var selectID = selectList[select].id;\n            var selectLabel = document.querySelector('label[for=' + selectID + ']');\n            selectLabel.classList.add('select-label');\n        }\n    }\n\n    // Grab file upload value for aesthetics.\n    // ============================================================ //\n    FormElements.prototype.fileValues = function(fileList) {\n        for (var fileInput = 0; fileInput < fileList.length; fileInput++) {\n            fileList[fileInput].addEventListener('change', function() {\n                if (this.files.length > 0) {\n                    var fileVal = this.parentNode.querySelector('.file-value');\n                    var fileValue = '';\n                    for (var i = 0; i < this.files.length; i++) {\n                        if (i + 1 != this.files.length) {\n                            fileValue += this.files[i].name + ' , '\n                        } else {\n                            fileValue += this.files[i].name\n                        }\n                    }\n                    fileVal.innerText = fileValue;\n                }\n            });\n        }\n    }\n\n    // Mass initialization load (check for fields already filled out etc.)\n    // ============================================================ //\n    FormElements.prototype.checkFormElements = function(elementList) {\n        for (var element = 0; element < elementList.length; element++) {\n            if ((elementList[element].nodeName === 'SELECT' && elementList[element].firstElementChild.innerText !== '') || elementList[element].value !== '') {\n                elementList[element].nextElementSibling.classList.add('active');\n            }\n        }\n    }\n\n    var _self;\n\n    if (typeof define === 'function' && define.amd) {\n        define([], function() {\n            return formElements;\n        });\n    } else if (typeof module !== 'undefined' && module.exports) {\n        module.exports = formElements;\n    } else {\n        window.formElements = formElements;\n    }\n\n})(window, document);\n\nvar createForm = formElements.init();\n","// ;((window, document, undefined) => {\n//\n//     const parallax = {\n//         get: function() {\n//             return _self;\n//         },\n//         init: function(element, options) {\n//             return _self || new Parallax(element, options);\n//         },\n//     };\n//\n//     class Parallax {\n//\n//         constructor(element = '[data-parallax=parallax]', options = {\n//             speed: .4,\n//             xPos: 'center',\n//             yPos: 'center'\n//         }) {\n//\n//         }\n//\n//\n//\n//     }\n//\n//     let _self;\n//\n//     if (typeof define === 'function' && define.amd) {\n//         define([], () => {\n//             return parallax;\n//         });\n//     } else if (typeof module !== 'undefined' && module.exports) {\n//         module.exports = parallax;\n//     } else {\n//         window.parallax = parallax;\n//     }\n//\n// })(window, document);\n//\n// const createParallax = parallax.init();\n"]}